// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: upstox-market-data.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_initial_feed Type = 0
	Type_live_feed    Type = 1
	Type_market_info  Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "initial_feed",
		1: "live_feed",
		2: "market_info",
	}
	Type_value = map[string]int32{
		"initial_feed": 0,
		"live_feed":    1,
		"market_info":  2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_upstox_market_data_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_upstox_market_data_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{0}
}

type RequestMode int32

const (
	RequestMode_ltpc          RequestMode = 0
	RequestMode_full_d5       RequestMode = 1
	RequestMode_option_greeks RequestMode = 2
	RequestMode_full_d30      RequestMode = 3
)

// Enum value maps for RequestMode.
var (
	RequestMode_name = map[int32]string{
		0: "ltpc",
		1: "full_d5",
		2: "option_greeks",
		3: "full_d30",
	}
	RequestMode_value = map[string]int32{
		"ltpc":          0,
		"full_d5":       1,
		"option_greeks": 2,
		"full_d30":      3,
	}
)

func (x RequestMode) Enum() *RequestMode {
	p := new(RequestMode)
	*p = x
	return p
}

func (x RequestMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestMode) Descriptor() protoreflect.EnumDescriptor {
	return file_upstox_market_data_proto_enumTypes[1].Descriptor()
}

func (RequestMode) Type() protoreflect.EnumType {
	return &file_upstox_market_data_proto_enumTypes[1]
}

func (x RequestMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestMode.Descriptor instead.
func (RequestMode) EnumDescriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{1}
}

type MarketStatus int32

const (
	MarketStatus_PRE_OPEN_START MarketStatus = 0
	MarketStatus_PRE_OPEN_END   MarketStatus = 1
	MarketStatus_NORMAL_OPEN    MarketStatus = 2
	MarketStatus_NORMAL_CLOSE   MarketStatus = 3
	MarketStatus_CLOSING_START  MarketStatus = 4
	MarketStatus_CLOSING_END    MarketStatus = 5
)

// Enum value maps for MarketStatus.
var (
	MarketStatus_name = map[int32]string{
		0: "PRE_OPEN_START",
		1: "PRE_OPEN_END",
		2: "NORMAL_OPEN",
		3: "NORMAL_CLOSE",
		4: "CLOSING_START",
		5: "CLOSING_END",
	}
	MarketStatus_value = map[string]int32{
		"PRE_OPEN_START": 0,
		"PRE_OPEN_END":   1,
		"NORMAL_OPEN":    2,
		"NORMAL_CLOSE":   3,
		"CLOSING_START":  4,
		"CLOSING_END":    5,
	}
)

func (x MarketStatus) Enum() *MarketStatus {
	p := new(MarketStatus)
	*p = x
	return p
}

func (x MarketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_upstox_market_data_proto_enumTypes[2].Descriptor()
}

func (MarketStatus) Type() protoreflect.EnumType {
	return &file_upstox_market_data_proto_enumTypes[2]
}

func (x MarketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarketStatus.Descriptor instead.
func (MarketStatus) EnumDescriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{2}
}

type LTPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ltp           float64                `protobuf:"fixed64,1,opt,name=ltp,proto3" json:"ltp,omitempty"`
	Ltt           int64                  `protobuf:"varint,2,opt,name=ltt,proto3" json:"ltt,omitempty"`
	Ltq           int64                  `protobuf:"varint,3,opt,name=ltq,proto3" json:"ltq,omitempty"`
	Cp            float64                `protobuf:"fixed64,4,opt,name=cp,proto3" json:"cp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LTPC) Reset() {
	*x = LTPC{}
	mi := &file_upstox_market_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LTPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LTPC) ProtoMessage() {}

func (x *LTPC) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LTPC.ProtoReflect.Descriptor instead.
func (*LTPC) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{0}
}

func (x *LTPC) GetLtp() float64 {
	if x != nil {
		return x.Ltp
	}
	return 0
}

func (x *LTPC) GetLtt() int64 {
	if x != nil {
		return x.Ltt
	}
	return 0
}

func (x *LTPC) GetLtq() int64 {
	if x != nil {
		return x.Ltq
	}
	return 0
}

func (x *LTPC) GetCp() float64 {
	if x != nil {
		return x.Cp
	}
	return 0
}

type MarketLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BidAskQuote   []*Quote               `protobuf:"bytes,1,rep,name=bidAskQuote,proto3" json:"bidAskQuote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketLevel) Reset() {
	*x = MarketLevel{}
	mi := &file_upstox_market_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketLevel) ProtoMessage() {}

func (x *MarketLevel) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketLevel.ProtoReflect.Descriptor instead.
func (*MarketLevel) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{1}
}

func (x *MarketLevel) GetBidAskQuote() []*Quote {
	if x != nil {
		return x.BidAskQuote
	}
	return nil
}

type MarketOHLC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ohlc          []*OHLC                `protobuf:"bytes,1,rep,name=ohlc,proto3" json:"ohlc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketOHLC) Reset() {
	*x = MarketOHLC{}
	mi := &file_upstox_market_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketOHLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOHLC) ProtoMessage() {}

func (x *MarketOHLC) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOHLC.ProtoReflect.Descriptor instead.
func (*MarketOHLC) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{2}
}

func (x *MarketOHLC) GetOhlc() []*OHLC {
	if x != nil {
		return x.Ohlc
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BidQ          int64                  `protobuf:"varint,1,opt,name=bidQ,proto3" json:"bidQ,omitempty"`
	BidP          float64                `protobuf:"fixed64,2,opt,name=bidP,proto3" json:"bidP,omitempty"`
	AskQ          int64                  `protobuf:"varint,3,opt,name=askQ,proto3" json:"askQ,omitempty"`
	AskP          float64                `protobuf:"fixed64,4,opt,name=askP,proto3" json:"askP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_upstox_market_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{3}
}

func (x *Quote) GetBidQ() int64 {
	if x != nil {
		return x.BidQ
	}
	return 0
}

func (x *Quote) GetBidP() float64 {
	if x != nil {
		return x.BidP
	}
	return 0
}

func (x *Quote) GetAskQ() int64 {
	if x != nil {
		return x.AskQ
	}
	return 0
}

func (x *Quote) GetAskP() float64 {
	if x != nil {
		return x.AskP
	}
	return 0
}

type OptionGreeks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Delta         float64                `protobuf:"fixed64,1,opt,name=delta,proto3" json:"delta,omitempty"`
	Theta         float64                `protobuf:"fixed64,2,opt,name=theta,proto3" json:"theta,omitempty"`
	Gamma         float64                `protobuf:"fixed64,3,opt,name=gamma,proto3" json:"gamma,omitempty"`
	Vega          float64                `protobuf:"fixed64,4,opt,name=vega,proto3" json:"vega,omitempty"`
	Rho           float64                `protobuf:"fixed64,5,opt,name=rho,proto3" json:"rho,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptionGreeks) Reset() {
	*x = OptionGreeks{}
	mi := &file_upstox_market_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionGreeks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionGreeks) ProtoMessage() {}

func (x *OptionGreeks) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionGreeks.ProtoReflect.Descriptor instead.
func (*OptionGreeks) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{4}
}

func (x *OptionGreeks) GetDelta() float64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *OptionGreeks) GetTheta() float64 {
	if x != nil {
		return x.Theta
	}
	return 0
}

func (x *OptionGreeks) GetGamma() float64 {
	if x != nil {
		return x.Gamma
	}
	return 0
}

func (x *OptionGreeks) GetVega() float64 {
	if x != nil {
		return x.Vega
	}
	return 0
}

func (x *OptionGreeks) GetRho() float64 {
	if x != nil {
		return x.Rho
	}
	return 0
}

type OHLC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interval      string                 `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	Open          float64                `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High          float64                `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           float64                `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         float64                `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Vol           int64                  `protobuf:"varint,6,opt,name=vol,proto3" json:"vol,omitempty"`
	Ts            int64                  `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OHLC) Reset() {
	*x = OHLC{}
	mi := &file_upstox_market_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OHLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OHLC) ProtoMessage() {}

func (x *OHLC) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OHLC.ProtoReflect.Descriptor instead.
func (*OHLC) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{5}
}

func (x *OHLC) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *OHLC) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *OHLC) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *OHLC) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *OHLC) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *OHLC) GetVol() int64 {
	if x != nil {
		return x.Vol
	}
	return 0
}

func (x *OHLC) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type MarketFullFeed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ltpc          *LTPC                  `protobuf:"bytes,1,opt,name=ltpc,proto3" json:"ltpc,omitempty"`
	MarketLevel   *MarketLevel           `protobuf:"bytes,2,opt,name=marketLevel,proto3" json:"marketLevel,omitempty"`
	OptionGreeks  *OptionGreeks          `protobuf:"bytes,3,opt,name=optionGreeks,proto3" json:"optionGreeks,omitempty"`
	MarketOHLC    *MarketOHLC            `protobuf:"bytes,4,opt,name=marketOHLC,proto3" json:"marketOHLC,omitempty"`
	Atp           float64                `protobuf:"fixed64,5,opt,name=atp,proto3" json:"atp,omitempty"`  //avg traded price
	Vtt           int64                  `protobuf:"varint,6,opt,name=vtt,proto3" json:"vtt,omitempty"`   //volume traded today
	Oi            float64                `protobuf:"fixed64,7,opt,name=oi,proto3" json:"oi,omitempty"`    //open interest
	Iv            float64                `protobuf:"fixed64,8,opt,name=iv,proto3" json:"iv,omitempty"`    //implied volatility
	Tbq           float64                `protobuf:"fixed64,9,opt,name=tbq,proto3" json:"tbq,omitempty"`  //total buy quantity
	Tsq           float64                `protobuf:"fixed64,10,opt,name=tsq,proto3" json:"tsq,omitempty"` //total sell quantity
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketFullFeed) Reset() {
	*x = MarketFullFeed{}
	mi := &file_upstox_market_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketFullFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFullFeed) ProtoMessage() {}

func (x *MarketFullFeed) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFullFeed.ProtoReflect.Descriptor instead.
func (*MarketFullFeed) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{6}
}

func (x *MarketFullFeed) GetLtpc() *LTPC {
	if x != nil {
		return x.Ltpc
	}
	return nil
}

func (x *MarketFullFeed) GetMarketLevel() *MarketLevel {
	if x != nil {
		return x.MarketLevel
	}
	return nil
}

func (x *MarketFullFeed) GetOptionGreeks() *OptionGreeks {
	if x != nil {
		return x.OptionGreeks
	}
	return nil
}

func (x *MarketFullFeed) GetMarketOHLC() *MarketOHLC {
	if x != nil {
		return x.MarketOHLC
	}
	return nil
}

func (x *MarketFullFeed) GetAtp() float64 {
	if x != nil {
		return x.Atp
	}
	return 0
}

func (x *MarketFullFeed) GetVtt() int64 {
	if x != nil {
		return x.Vtt
	}
	return 0
}

func (x *MarketFullFeed) GetOi() float64 {
	if x != nil {
		return x.Oi
	}
	return 0
}

func (x *MarketFullFeed) GetIv() float64 {
	if x != nil {
		return x.Iv
	}
	return 0
}

func (x *MarketFullFeed) GetTbq() float64 {
	if x != nil {
		return x.Tbq
	}
	return 0
}

func (x *MarketFullFeed) GetTsq() float64 {
	if x != nil {
		return x.Tsq
	}
	return 0
}

type IndexFullFeed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ltpc          *LTPC                  `protobuf:"bytes,1,opt,name=ltpc,proto3" json:"ltpc,omitempty"`
	MarketOHLC    *MarketOHLC            `protobuf:"bytes,2,opt,name=marketOHLC,proto3" json:"marketOHLC,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexFullFeed) Reset() {
	*x = IndexFullFeed{}
	mi := &file_upstox_market_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexFullFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexFullFeed) ProtoMessage() {}

func (x *IndexFullFeed) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexFullFeed.ProtoReflect.Descriptor instead.
func (*IndexFullFeed) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{7}
}

func (x *IndexFullFeed) GetLtpc() *LTPC {
	if x != nil {
		return x.Ltpc
	}
	return nil
}

func (x *IndexFullFeed) GetMarketOHLC() *MarketOHLC {
	if x != nil {
		return x.MarketOHLC
	}
	return nil
}

type FullFeed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to FullFeedUnion:
	//
	//	*FullFeed_MarketFF
	//	*FullFeed_IndexFF
	FullFeedUnion isFullFeed_FullFeedUnion `protobuf_oneof:"FullFeedUnion"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullFeed) Reset() {
	*x = FullFeed{}
	mi := &file_upstox_market_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullFeed) ProtoMessage() {}

func (x *FullFeed) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullFeed.ProtoReflect.Descriptor instead.
func (*FullFeed) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{8}
}

func (x *FullFeed) GetFullFeedUnion() isFullFeed_FullFeedUnion {
	if x != nil {
		return x.FullFeedUnion
	}
	return nil
}

func (x *FullFeed) GetMarketFF() *MarketFullFeed {
	if x != nil {
		if x, ok := x.FullFeedUnion.(*FullFeed_MarketFF); ok {
			return x.MarketFF
		}
	}
	return nil
}

func (x *FullFeed) GetIndexFF() *IndexFullFeed {
	if x != nil {
		if x, ok := x.FullFeedUnion.(*FullFeed_IndexFF); ok {
			return x.IndexFF
		}
	}
	return nil
}

type isFullFeed_FullFeedUnion interface {
	isFullFeed_FullFeedUnion()
}

type FullFeed_MarketFF struct {
	MarketFF *MarketFullFeed `protobuf:"bytes,1,opt,name=marketFF,proto3,oneof"`
}

type FullFeed_IndexFF struct {
	IndexFF *IndexFullFeed `protobuf:"bytes,2,opt,name=indexFF,proto3,oneof"`
}

func (*FullFeed_MarketFF) isFullFeed_FullFeedUnion() {}

func (*FullFeed_IndexFF) isFullFeed_FullFeedUnion() {}

type FirstLevelWithGreeks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ltpc          *LTPC                  `protobuf:"bytes,1,opt,name=ltpc,proto3" json:"ltpc,omitempty"`
	FirstDepth    *Quote                 `protobuf:"bytes,2,opt,name=firstDepth,proto3" json:"firstDepth,omitempty"`
	OptionGreeks  *OptionGreeks          `protobuf:"bytes,3,opt,name=optionGreeks,proto3" json:"optionGreeks,omitempty"`
	Vtt           int64                  `protobuf:"varint,4,opt,name=vtt,proto3" json:"vtt,omitempty"` //volume traded today
	Oi            float64                `protobuf:"fixed64,5,opt,name=oi,proto3" json:"oi,omitempty"`  //open interest
	Iv            float64                `protobuf:"fixed64,6,opt,name=iv,proto3" json:"iv,omitempty"`  //implied volatility
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirstLevelWithGreeks) Reset() {
	*x = FirstLevelWithGreeks{}
	mi := &file_upstox_market_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirstLevelWithGreeks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstLevelWithGreeks) ProtoMessage() {}

func (x *FirstLevelWithGreeks) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstLevelWithGreeks.ProtoReflect.Descriptor instead.
func (*FirstLevelWithGreeks) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{9}
}

func (x *FirstLevelWithGreeks) GetLtpc() *LTPC {
	if x != nil {
		return x.Ltpc
	}
	return nil
}

func (x *FirstLevelWithGreeks) GetFirstDepth() *Quote {
	if x != nil {
		return x.FirstDepth
	}
	return nil
}

func (x *FirstLevelWithGreeks) GetOptionGreeks() *OptionGreeks {
	if x != nil {
		return x.OptionGreeks
	}
	return nil
}

func (x *FirstLevelWithGreeks) GetVtt() int64 {
	if x != nil {
		return x.Vtt
	}
	return 0
}

func (x *FirstLevelWithGreeks) GetOi() float64 {
	if x != nil {
		return x.Oi
	}
	return 0
}

func (x *FirstLevelWithGreeks) GetIv() float64 {
	if x != nil {
		return x.Iv
	}
	return 0
}

type Feed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to FeedUnion:
	//
	//	*Feed_Ltpc
	//	*Feed_FullFeed
	//	*Feed_FirstLevelWithGreeks
	FeedUnion     isFeed_FeedUnion `protobuf_oneof:"FeedUnion"`
	RequestMode   RequestMode      `protobuf:"varint,4,opt,name=requestMode,proto3,enum=com.upstox.marketdatafeederv3udapi.rpc.proto.RequestMode" json:"requestMode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feed) Reset() {
	*x = Feed{}
	mi := &file_upstox_market_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{10}
}

func (x *Feed) GetFeedUnion() isFeed_FeedUnion {
	if x != nil {
		return x.FeedUnion
	}
	return nil
}

func (x *Feed) GetLtpc() *LTPC {
	if x != nil {
		if x, ok := x.FeedUnion.(*Feed_Ltpc); ok {
			return x.Ltpc
		}
	}
	return nil
}

func (x *Feed) GetFullFeed() *FullFeed {
	if x != nil {
		if x, ok := x.FeedUnion.(*Feed_FullFeed); ok {
			return x.FullFeed
		}
	}
	return nil
}

func (x *Feed) GetFirstLevelWithGreeks() *FirstLevelWithGreeks {
	if x != nil {
		if x, ok := x.FeedUnion.(*Feed_FirstLevelWithGreeks); ok {
			return x.FirstLevelWithGreeks
		}
	}
	return nil
}

func (x *Feed) GetRequestMode() RequestMode {
	if x != nil {
		return x.RequestMode
	}
	return RequestMode_ltpc
}

type isFeed_FeedUnion interface {
	isFeed_FeedUnion()
}

type Feed_Ltpc struct {
	Ltpc *LTPC `protobuf:"bytes,1,opt,name=ltpc,proto3,oneof"`
}

type Feed_FullFeed struct {
	FullFeed *FullFeed `protobuf:"bytes,2,opt,name=fullFeed,proto3,oneof"`
}

type Feed_FirstLevelWithGreeks struct {
	FirstLevelWithGreeks *FirstLevelWithGreeks `protobuf:"bytes,3,opt,name=firstLevelWithGreeks,proto3,oneof"`
}

func (*Feed_Ltpc) isFeed_FeedUnion() {}

func (*Feed_FullFeed) isFeed_FeedUnion() {}

func (*Feed_FirstLevelWithGreeks) isFeed_FeedUnion() {}

type MarketInfo struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	SegmentStatus map[string]MarketStatus `protobuf:"bytes,1,rep,name=segmentStatus,proto3" json:"segmentStatus,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=com.upstox.marketdatafeederv3udapi.rpc.proto.MarketStatus"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketInfo) Reset() {
	*x = MarketInfo{}
	mi := &file_upstox_market_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketInfo) ProtoMessage() {}

func (x *MarketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketInfo.ProtoReflect.Descriptor instead.
func (*MarketInfo) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{11}
}

func (x *MarketInfo) GetSegmentStatus() map[string]MarketStatus {
	if x != nil {
		return x.SegmentStatus
	}
	return nil
}

type FeedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Type                   `protobuf:"varint,1,opt,name=type,proto3,enum=com.upstox.marketdatafeederv3udapi.rpc.proto.Type" json:"type,omitempty"`
	Feeds         map[string]*Feed       `protobuf:"bytes,2,rep,name=feeds,proto3" json:"feeds,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CurrentTs     int64                  `protobuf:"varint,3,opt,name=currentTs,proto3" json:"currentTs,omitempty"`
	MarketInfo    *MarketInfo            `protobuf:"bytes,4,opt,name=marketInfo,proto3" json:"marketInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	mi := &file_upstox_market_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upstox_market_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_upstox_market_data_proto_rawDescGZIP(), []int{12}
}

func (x *FeedResponse) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_initial_feed
}

func (x *FeedResponse) GetFeeds() map[string]*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *FeedResponse) GetCurrentTs() int64 {
	if x != nil {
		return x.CurrentTs
	}
	return 0
}

func (x *FeedResponse) GetMarketInfo() *MarketInfo {
	if x != nil {
		return x.MarketInfo
	}
	return nil
}

var File_upstox_market_data_proto protoreflect.FileDescriptor

const file_upstox_market_data_proto_rawDesc = "" +
	"\n" +
	"\x18upstox-market-data.proto\x12,com.upstox.marketdatafeederv3udapi.rpc.proto\"L\n" +
	"\x04LTPC\x12\x10\n" +
	"\x03ltp\x18\x01 \x01(\x01R\x03ltp\x12\x10\n" +
	"\x03ltt\x18\x02 \x01(\x03R\x03ltt\x12\x10\n" +
	"\x03ltq\x18\x03 \x01(\x03R\x03ltq\x12\x0e\n" +
	"\x02cp\x18\x04 \x01(\x01R\x02cp\"d\n" +
	"\vMarketLevel\x12U\n" +
	"\vbidAskQuote\x18\x01 \x03(\v23.com.upstox.marketdatafeederv3udapi.rpc.proto.QuoteR\vbidAskQuote\"T\n" +
	"\n" +
	"MarketOHLC\x12F\n" +
	"\x04ohlc\x18\x01 \x03(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.OHLCR\x04ohlc\"W\n" +
	"\x05Quote\x12\x12\n" +
	"\x04bidQ\x18\x01 \x01(\x03R\x04bidQ\x12\x12\n" +
	"\x04bidP\x18\x02 \x01(\x01R\x04bidP\x12\x12\n" +
	"\x04askQ\x18\x03 \x01(\x03R\x04askQ\x12\x12\n" +
	"\x04askP\x18\x04 \x01(\x01R\x04askP\"v\n" +
	"\fOptionGreeks\x12\x14\n" +
	"\x05delta\x18\x01 \x01(\x01R\x05delta\x12\x14\n" +
	"\x05theta\x18\x02 \x01(\x01R\x05theta\x12\x14\n" +
	"\x05gamma\x18\x03 \x01(\x01R\x05gamma\x12\x12\n" +
	"\x04vega\x18\x04 \x01(\x01R\x04vega\x12\x10\n" +
	"\x03rho\x18\x05 \x01(\x01R\x03rho\"\x94\x01\n" +
	"\x04OHLC\x12\x1a\n" +
	"\binterval\x18\x01 \x01(\tR\binterval\x12\x12\n" +
	"\x04open\x18\x02 \x01(\x01R\x04open\x12\x12\n" +
	"\x04high\x18\x03 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x04 \x01(\x01R\x03low\x12\x14\n" +
	"\x05close\x18\x05 \x01(\x01R\x05close\x12\x10\n" +
	"\x03vol\x18\x06 \x01(\x03R\x03vol\x12\x0e\n" +
	"\x02ts\x18\a \x01(\x03R\x02ts\"\xd7\x03\n" +
	"\x0eMarketFullFeed\x12F\n" +
	"\x04ltpc\x18\x01 \x01(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPCR\x04ltpc\x12[\n" +
	"\vmarketLevel\x18\x02 \x01(\v29.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketLevelR\vmarketLevel\x12^\n" +
	"\foptionGreeks\x18\x03 \x01(\v2:.com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeksR\foptionGreeks\x12X\n" +
	"\n" +
	"marketOHLC\x18\x04 \x01(\v28.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLCR\n" +
	"marketOHLC\x12\x10\n" +
	"\x03atp\x18\x05 \x01(\x01R\x03atp\x12\x10\n" +
	"\x03vtt\x18\x06 \x01(\x03R\x03vtt\x12\x0e\n" +
	"\x02oi\x18\a \x01(\x01R\x02oi\x12\x0e\n" +
	"\x02iv\x18\b \x01(\x01R\x02iv\x12\x10\n" +
	"\x03tbq\x18\t \x01(\x01R\x03tbq\x12\x10\n" +
	"\x03tsq\x18\n" +
	" \x01(\x01R\x03tsq\"\xb1\x01\n" +
	"\rIndexFullFeed\x12F\n" +
	"\x04ltpc\x18\x01 \x01(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPCR\x04ltpc\x12X\n" +
	"\n" +
	"marketOHLC\x18\x02 \x01(\v28.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLCR\n" +
	"marketOHLC\"\xd0\x01\n" +
	"\bFullFeed\x12Z\n" +
	"\bmarketFF\x18\x01 \x01(\v2<.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeedH\x00R\bmarketFF\x12W\n" +
	"\aindexFF\x18\x02 \x01(\v2;.com.upstox.marketdatafeederv3udapi.rpc.proto.IndexFullFeedH\x00R\aindexFFB\x0f\n" +
	"\rFullFeedUnion\"\xc5\x02\n" +
	"\x14FirstLevelWithGreeks\x12F\n" +
	"\x04ltpc\x18\x01 \x01(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPCR\x04ltpc\x12S\n" +
	"\n" +
	"firstDepth\x18\x02 \x01(\v23.com.upstox.marketdatafeederv3udapi.rpc.proto.QuoteR\n" +
	"firstDepth\x12^\n" +
	"\foptionGreeks\x18\x03 \x01(\v2:.com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeksR\foptionGreeks\x12\x10\n" +
	"\x03vtt\x18\x04 \x01(\x03R\x03vtt\x12\x0e\n" +
	"\x02oi\x18\x05 \x01(\x01R\x02oi\x12\x0e\n" +
	"\x02iv\x18\x06 \x01(\x01R\x02iv\"\x8a\x03\n" +
	"\x04Feed\x12H\n" +
	"\x04ltpc\x18\x01 \x01(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPCH\x00R\x04ltpc\x12T\n" +
	"\bfullFeed\x18\x02 \x01(\v26.com.upstox.marketdatafeederv3udapi.rpc.proto.FullFeedH\x00R\bfullFeed\x12x\n" +
	"\x14firstLevelWithGreeks\x18\x03 \x01(\v2B.com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeksH\x00R\x14firstLevelWithGreeks\x12[\n" +
	"\vrequestMode\x18\x04 \x01(\x0e29.com.upstox.marketdatafeederv3udapi.rpc.proto.RequestModeR\vrequestModeB\v\n" +
	"\tFeedUnion\"\xfd\x01\n" +
	"\n" +
	"MarketInfo\x12q\n" +
	"\rsegmentStatus\x18\x01 \x03(\v2K.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo.SegmentStatusEntryR\rsegmentStatus\x1a|\n" +
	"\x12SegmentStatusEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12P\n" +
	"\x05value\x18\x02 \x01(\x0e2:.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketStatusR\x05value:\x028\x01\"\x99\x03\n" +
	"\fFeedResponse\x12F\n" +
	"\x04type\x18\x01 \x01(\x0e22.com.upstox.marketdatafeederv3udapi.rpc.proto.TypeR\x04type\x12[\n" +
	"\x05feeds\x18\x02 \x03(\v2E.com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.FeedsEntryR\x05feeds\x12\x1c\n" +
	"\tcurrentTs\x18\x03 \x01(\x03R\tcurrentTs\x12X\n" +
	"\n" +
	"marketInfo\x18\x04 \x01(\v28.com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfoR\n" +
	"marketInfo\x1al\n" +
	"\n" +
	"FeedsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12H\n" +
	"\x05value\x18\x02 \x01(\v22.com.upstox.marketdatafeederv3udapi.rpc.proto.FeedR\x05value:\x028\x01*8\n" +
	"\x04Type\x12\x10\n" +
	"\finitial_feed\x10\x00\x12\r\n" +
	"\tlive_feed\x10\x01\x12\x0f\n" +
	"\vmarket_info\x10\x02*E\n" +
	"\vRequestMode\x12\b\n" +
	"\x04ltpc\x10\x00\x12\v\n" +
	"\afull_d5\x10\x01\x12\x11\n" +
	"\roption_greeks\x10\x02\x12\f\n" +
	"\bfull_d30\x10\x03*{\n" +
	"\fMarketStatus\x12\x12\n" +
	"\x0ePRE_OPEN_START\x10\x00\x12\x10\n" +
	"\fPRE_OPEN_END\x10\x01\x12\x0f\n" +
	"\vNORMAL_OPEN\x10\x02\x12\x10\n" +
	"\fNORMAL_CLOSE\x10\x03\x12\x11\n" +
	"\rCLOSING_START\x10\x04\x12\x0f\n" +
	"\vCLOSING_END\x10\x05B(Z&github.com/adeludedperson/go-upstox/pbb\x06proto3"

var (
	file_upstox_market_data_proto_rawDescOnce sync.Once
	file_upstox_market_data_proto_rawDescData []byte
)

func file_upstox_market_data_proto_rawDescGZIP() []byte {
	file_upstox_market_data_proto_rawDescOnce.Do(func() {
		file_upstox_market_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_upstox_market_data_proto_rawDesc), len(file_upstox_market_data_proto_rawDesc)))
	})
	return file_upstox_market_data_proto_rawDescData
}

var file_upstox_market_data_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_upstox_market_data_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_upstox_market_data_proto_goTypes = []any{
	(Type)(0),                    // 0: com.upstox.marketdatafeederv3udapi.rpc.proto.Type
	(RequestMode)(0),             // 1: com.upstox.marketdatafeederv3udapi.rpc.proto.RequestMode
	(MarketStatus)(0),            // 2: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketStatus
	(*LTPC)(nil),                 // 3: com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC
	(*MarketLevel)(nil),          // 4: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketLevel
	(*MarketOHLC)(nil),           // 5: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLC
	(*Quote)(nil),                // 6: com.upstox.marketdatafeederv3udapi.rpc.proto.Quote
	(*OptionGreeks)(nil),         // 7: com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks
	(*OHLC)(nil),                 // 8: com.upstox.marketdatafeederv3udapi.rpc.proto.OHLC
	(*MarketFullFeed)(nil),       // 9: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed
	(*IndexFullFeed)(nil),        // 10: com.upstox.marketdatafeederv3udapi.rpc.proto.IndexFullFeed
	(*FullFeed)(nil),             // 11: com.upstox.marketdatafeederv3udapi.rpc.proto.FullFeed
	(*FirstLevelWithGreeks)(nil), // 12: com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks
	(*Feed)(nil),                 // 13: com.upstox.marketdatafeederv3udapi.rpc.proto.Feed
	(*MarketInfo)(nil),           // 14: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo
	(*FeedResponse)(nil),         // 15: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse
	nil,                          // 16: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo.SegmentStatusEntry
	nil,                          // 17: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.FeedsEntry
}
var file_upstox_market_data_proto_depIdxs = []int32{
	6,  // 0: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketLevel.bidAskQuote:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.Quote
	8,  // 1: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLC.ohlc:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.OHLC
	3,  // 2: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed.ltpc:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC
	4,  // 3: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed.marketLevel:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketLevel
	7,  // 4: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed.optionGreeks:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks
	5,  // 5: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed.marketOHLC:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLC
	3,  // 6: com.upstox.marketdatafeederv3udapi.rpc.proto.IndexFullFeed.ltpc:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC
	5,  // 7: com.upstox.marketdatafeederv3udapi.rpc.proto.IndexFullFeed.marketOHLC:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketOHLC
	9,  // 8: com.upstox.marketdatafeederv3udapi.rpc.proto.FullFeed.marketFF:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketFullFeed
	10, // 9: com.upstox.marketdatafeederv3udapi.rpc.proto.FullFeed.indexFF:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.IndexFullFeed
	3,  // 10: com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks.ltpc:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC
	6,  // 11: com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks.firstDepth:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.Quote
	7,  // 12: com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks.optionGreeks:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks
	3,  // 13: com.upstox.marketdatafeederv3udapi.rpc.proto.Feed.ltpc:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC
	11, // 14: com.upstox.marketdatafeederv3udapi.rpc.proto.Feed.fullFeed:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.FullFeed
	12, // 15: com.upstox.marketdatafeederv3udapi.rpc.proto.Feed.firstLevelWithGreeks:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks
	1,  // 16: com.upstox.marketdatafeederv3udapi.rpc.proto.Feed.requestMode:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.RequestMode
	16, // 17: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo.segmentStatus:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo.SegmentStatusEntry
	0,  // 18: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.type:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.Type
	17, // 19: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.feeds:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.FeedsEntry
	14, // 20: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.marketInfo:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo
	2,  // 21: com.upstox.marketdatafeederv3udapi.rpc.proto.MarketInfo.SegmentStatusEntry.value:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.MarketStatus
	13, // 22: com.upstox.marketdatafeederv3udapi.rpc.proto.FeedResponse.FeedsEntry.value:type_name -> com.upstox.marketdatafeederv3udapi.rpc.proto.Feed
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_upstox_market_data_proto_init() }
func file_upstox_market_data_proto_init() {
	if File_upstox_market_data_proto != nil {
		return
	}
	file_upstox_market_data_proto_msgTypes[8].OneofWrappers = []any{
		(*FullFeed_MarketFF)(nil),
		(*FullFeed_IndexFF)(nil),
	}
	file_upstox_market_data_proto_msgTypes[10].OneofWrappers = []any{
		(*Feed_Ltpc)(nil),
		(*Feed_FullFeed)(nil),
		(*Feed_FirstLevelWithGreeks)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_upstox_market_data_proto_rawDesc), len(file_upstox_market_data_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_upstox_market_data_proto_goTypes,
		DependencyIndexes: file_upstox_market_data_proto_depIdxs,
		EnumInfos:         file_upstox_market_data_proto_enumTypes,
		MessageInfos:      file_upstox_market_data_proto_msgTypes,
	}.Build()
	File_upstox_market_data_proto = out.File
	file_upstox_market_data_proto_goTypes = nil
	file_upstox_market_data_proto_depIdxs = nil
}
